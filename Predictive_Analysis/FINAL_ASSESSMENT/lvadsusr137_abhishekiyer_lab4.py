# -*- coding: utf-8 -*-
"""LVADSUSR137_AbhishekIyer_LAB4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m3hpfWbv9ajW0DJiF0RdwXInq-i44ya0
"""

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import MinMaxScaler,StandardScaler, LabelEncoder, OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn import tree
from sklearn.cluster import KMeans
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import IsolationForest

from sklearn.metrics import r2_score,mean_squared_error, silhouette_score, accuracy_score, recall_score, precision_score, f1_score, confusion_matrix, classification_report
import math

df = pd.read_csv("/content/anomaly_train.csv")
df.head()

features = ["Amount", "Time","Location"]
X = df[features]
X.head()

X = pd.get_dummies(X)

model = IsolationForest(n_estimators=100, max_samples='auto', contamination=0.1)
model.fit(X)

df['anomaly_score'] = model.decision_function(X)
df.head()

df['result'] = df.anomaly_score.apply(lambda x: 1 if x<0 else 0)
df['result2'] = model.predict(X)
df.head()

plt.scatter(data = df, x = 'Amount',y = 'Time',c = 'result2')