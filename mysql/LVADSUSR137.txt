QUESTION 1
SELECT CUSTOMERID 
FROM CustomerInteractions
WHERE MONTH = "MARCH" AND DATAUSED > (SELECT AVG(DATAUSED) FROM CustomerInteractions);

QUESTION 2
SELECT CUSTOMERID, MONTH, SUM(DATAUSED)
FROM CUSTOMERINTERACTIONS 
GROUP BY CUSTOMERID, MONTH;

AFTER LOOKING AT THE GROUPED TABLE, 206 HAS AN INCREASE IN DATA USAGE.

QUESTION 3
SELECT CUSTOMERID, MONTH, SUM(MESSAGECOUNT), SUM(DATAUSED)
FROM CUSTOMERINTERACTIONS 
GROUP BY CUSTOMERID, MONTH;

AFTER LOOKING AT THE GROUPED TABLE, 206 HAS A DECREASE IN MESSAGE COUNT AND INCREASE IN DATA USAGE.

QUESTION 4
-- Analyze the sales performace of different product types
SELECT PRODUCTTYPEID, SUM(TOTALSALESAMOUNT)
FROM QuarterlySales
GROUP BY PRODUCTTYPEID;
-- Calculate the total sales for product in type 1
SELECT SUM(TOTALSALESAMOUNT) AS SUM 
FROM QuarterlySales
WHERE PRODUCTTYPEID = 1;


QUESTION 5
--Top selling product in Q1 2024
SELECT PRODUCTTYPEID, SUM(TOTALSALESAMOUNT) AS SUM 
FROM QuarterlySales
WHERE Quarter = "Q1" AND YEAR = "2024"
GROUP BY PRODUCTTYPEID
ORDER BY SUM DESC
LIMIT 1;


QUESTION 6
SELECT PRODUCTTYPEID, AVG(TOTALSALESAMOUNT)/SUM(UNITSSOLD) AS AVERAGEPERUNIT
FROM QuarterlySales
WHERE Quarter = "Q2" AND YEAR = "2024"
GROUP BY PRODUCTTYPEID
HAVING PRODUCTTYPEID = 1;


QUESTION 7
SELECT REGION 
FROM SectorEnergyConsumption
WHERE (EnergySource = "SOLAR" OR EnergySource = "WIND") AND MONTH = "MARCH" AND ConsumptionKWh > (SELECT AVG(ConsumptionKWh) FROM SectorEnergyConsumption WHERE EnergySource = "SOLAR" OR EnergySource = "WIND");


QUESTION 8
SELECT MONTH, SECTOR, SUM(ConsumptionKWh)
FROM SectorEnergyConsumption
GROUP BY MONTH, SECTOR;
-- WE CAN SEE THAT RESIDENTIAL SECTOR EXPERIENCED AN UPTICK.

QUESTION 9
SELECT MONTH, ENERGYSOURCE, SUM(ConsumptionKWh)
FROM SectorEnergyConsumption
GROUP BY MONTH, ENERGYSOURCE
HAVING MONTH = "February";


QUESTION 10
SELECT CUSTOMERNAME 
FROM InsuranceActivities
WHERE (FEEDBACKSCORE > (SELECT AVG(FEEDBACKSCORE) FROM InsuranceActivities) OR ClaimsCount > 2) AND Investigation = "NO"; 

QUESTION 11
SELECT SUM(AnnualPremium)
FROM InsuranceActivities
WHERE Investigation = "NO" AND FeedbackScore > (SELECT AVG(FEEDBACKSCORE) FROM InsuranceActivities);

QUESTION 12
SELECT POLICYTYPE, AVG(FEEDBACKSCORE), CASE WHEN CLAIMSCOUNT> 0 THEN "HAS HISTORY" ELSE "DOES NOT"
FROM InsuranceActivities
GROUP BY POLICYTYPE;



